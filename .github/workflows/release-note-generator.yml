name: Generate Release Notes

on:
  pull_request:
    branches:
      - main
    types: [opened, labeled, unlabeled]
    

jobs:      
  release-notes:
    runs-on: ubuntu-latest
    ## Run job only on release branches
    if:  startsWith(github.head_ref, 'release/')
    env:
      MAIN_BRANCH: main
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get list of merged commits from release branch
        id: get_commits
        run: |
          # Get the branch being merged (e.g., release/1.0.0)
          RELEASE_BRANCH="${{ github.event.pull_request.head.ref }}"
          
          # Find merge commits between release branch and master
          git fetch origin $MAIN_BRANCH && git fetch origin $RELEASE_BRANCH
          COMMITS=$(git log origin/$MAIN_BRANCH..origin/$RELEASE_BRANCH --merges --pretty=format:"%H %s")

          # Writing to env
          echo "commits<<EOF"  >> $GITHUB_ENV
          echo "$COMMITS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV


      - name: Generate Release Notes
        id: generate_notes
        run: |
          FEATURES=""
          FIXES=""
          COMMITS="${{ env.commits }}"
          
          while read -r COMMIT; do
            if [[ ! "$COMMIT" =~ 'Merge pull request' ]]; then 
              continue 
            fi
            if [[ "$COMMIT" =~ fix/([0-9]+)- ]]; then
              TICKET="#${BASH_REMATCH[1]}"
              FIXES="${FIXES}${TICKET}\n"
            elif [[ "$COMMIT" =~ feat/([0-9]+)- ]]; then
              TICKET="#${BASH_REMATCH[1]}"
              FEATURES="${FEATURES}${TICKET}\n"
            fi
          done <<< "$COMMITS"
      
          echo -e $FEATURES
          echo -e $FIXES
          
          echo "features=${FEATURES:-'None'}" >> $GITHUB_ENV
          echo "fixes=${FIXES:-'None'}" >> $GITHUB_ENV

     
